<!-- Verb detail -->
<div class="row">
    <div class="span12">
    <h1 class="pull-left clearfix">
    	<span class="object-language" id="<%= dom_id(@verb) %>"><%= @verb %></span>
    	<% if @verb.original_script %>
    		<small>(<span class="verb"><%= @verb.original_script %></span>)
    		</small>
    	<% end %>
    </h1>

    <% if @verb.comment %>
    	<button id="verb_toggle_commment" class="btn btn-mini" type="button">show comment</button>
    	<div id="verb_comment"><p class="box"><%= raw @verb.comment %></p></div>
    <% end %>

  </div>
</div>

<div class="new row">
	<div class="span3">
		<h3>Coding frame</h3>
		<%= div_for @verb.coding_frame, :class => 'well center bg-cf' do |cf| %>
			<big><%= cf %></big>
		<% end %>
	</div>

	<div class="span4">
		<h3>
			<%= 'Meaning'.pluralize @verb.meanings.size  %>
			and Microroles
		</h3>
		<%= div_for @verb.meanings, :class => "row" do |meaning| %>
			<div class="span1">
				<%= link_to meaning, meaning %>
			</div>
			<div class="span3">
				<% @verb.coding_frame.microroles.joins(:meaning).where(microroles: {meaning_id: @verb.meanings.pluck(:id)}).uniq.each do |mrole| %>
					<%= div_for mrole do %>
					  <% idx_no = @verb.coding_frame.coding_frame_index_numbers.joins(:microroles).where(microroles:{id:mrole.id}).first.index_number %>
					  <%= raw "#{idx_no}&nbsp; &nbsp;#{mrole}" %>
					<% end %>
				<% end %>
			</div>
			
		<% end %>
			<% all_mrs = @verb.microroles.uniq %>
			<% basic_mrs = @verb.coding_frame.microroles.joins(:meaning).where(microroles: {meaning_id: @verb.meanings.pluck(:id)}) %>
			<% new_mrs = all_mrs - basic_mrs %>
			<% if new_mrs.size > 0 %>
				<div class="row new"><div class="span4">
					<strong>MR of arguments introduced via alternations:</strong>
					<br><%= new_mrs.map{|x|x.name}.join(', ') %>
				</div></div>			
			<% end %>
		
	</div>
	
	<div class="span5">
		<h3>
			Coding sets and Argument types
		</h3>
<% cf = @verb.coding_frame %>
<% rs = cf.coding_frame_index_numbers.joins("LEFT OUTER JOIN argument_types ON coding_frame_index_numbers.argument_type_id = argument_types.id").joins("LEFT OUTER JOIN coding_sets ON coding_frame_index_numbers.coding_set_id = coding_sets.id").joins(:microroles => :meaning).where(microroles:{meaning_id: @verb.meanings.pluck(:id)}).select("microroles.name as microrole, microroles.id as microrole_id, microroles.meaning_id, coding_frame_index_numbers.index_number, argument_types.argument_type as argument_type_name, coding_sets.name as coding_set_name").order("index_number") %>
		<table class="table table-striped table-condensed">
			<thead>
				<tr>
					<th>#</th> <th>Coding set</th> <th>Argument type</th> 
				</tr>
			</thead><tbody>
			<% rs.each do |r| %>
			<tr>
				<td><%= r.index_number %></td> <td><%= r.coding_set_name %></td> <td><%= r.argument_type_name %></td>
  			</tr>
			<% end %>
		</tbody></table>
  	</div>

</div>

<div class="row new">
  <div class="span12">
  	<h3><!-- Examples -->
  		<%= 'Example'.pluralize @verb.examples_of_coding_frame.size  %>
  		<small>for the coding frame</small>
  	</h3>
  	<% @verb.examples_of_coding_frame.each do |example| %>
  		<%= div_for example, :class=>"row new" do %>
  		<div class="span1">
  			<%= link_to "(#{example.number})", [@language, example],
  			:title=>"View details for example #{example.number}" %>
  		</div>
  		<div class="span9">
  			<div class="row object-language">
  				<%= example.primary_text %>
  			</div>
  			<div class="row">
  				<% at_pieces = example.analyzed_text.split().map!{|s| html_escape(s)} %>
  				<% gl_pieces = example.gloss.split().map!{|s| html_escape(s).gsub(/[A-Z]+/){|caps| '<span class="sc">'<<caps<<'</span>'} } %>
  				<% glosses = at_pieces.zip(gl_pieces).map!{|pair| pair.join('<br/>')} %>
  				<% glosses.each do |gloss| %>
  				  <div class="gloss-unit"><%= raw gloss %></div>
  				<% end %>
  			</div>
  			<div class="row">
  				<%= "‘#{example.translation}’" %>
  			</div>
  		</div>
  		<% end %>
  	<% end %>
  </div>
</div>

<div class="row new">
	<div class="span12">
		<h3>Alternations</h3>
		
		<table id="alternation_values_list" class="table dataTable table-striped table-bordered">
		  <thead>
		  	<tr>
			    <th>Alternation name</th>
  				<th>Coded?</th>
  				<th>Occurrence</th>
			    <th>Derived Coding frame</th>
			    <th>Example</th>
		  	</tr>
		  </thead>
		<tbody>
		<% @verb.alternation_values.each do |av| %>
		<% altn = av.alternation %>
		<tr>
			<td><%= link_to raw(altn.name), [@language, altn] %></td>
			<td><%= altn.coded_yes_no %></td>
			<td><%= av.alternation_occurs.sub('ly','') %></td>
			<td><%= link_to(av.derived_coding_frame,[@language, av.derived_coding_frame]) unless av.derived_coding_frame.nil? %></td>
		  <td><% if av.examples.first %>
    				<% ex = av.examples.first %>
    					<div><%= link_to(raw(ex.analyzed_text), [@language,ex]) %><br/>
    					 	 <%= raw ex.translation %>
    					</div>
    				<% end %>
  		</td>
		</tr>
		<% end %>
		</tbody>
	</div>
</div>

<!-- TESTING AREA -->

